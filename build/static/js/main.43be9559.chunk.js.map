{"version":3,"sources":["assetss/img/logoApp.png","services/topTechApi.js","components/Login.jsx","assetss/img/logoB2.png","template/Header.js","components/Home.jsx","components/Desafios.jsx","App.js","index.js"],"names":["topTechApi","axios","create","baseURL","Login","props","state","form","error","errorMsg","manejadorSubmit","e","preventDefault","manejadorChange","a","setState","target","name","value","manejadorBtn","post","then","response","tokenDetails","data","token","localStorage","setItem","JSON","stringify","console","log","history","push","catch","Fragment","className","id","src","logoApp","width","alt","onSubmit","this","type","placeholder","onChange","onClick","role","React","Component","Header","height","href","Home","setHoverData","hoverData","category","updateSeries","chartOptions","series","Math","random","xAxis","categories","plotOptions","point","events","mouseOver","bind","highcharts","Highcharts","options","Desafios","desafios","modalInsertar","nombre_desafio","estado_desafio","puntaje_desafio","paso1Desafio","paso2Desafio","paso3Desafio","paso4Desafio","tipoModal","peticionGet","parse","getItem","get","headers","message","peticionPost","peticionPut","put","desafio_id","peticionPutEstado","desafio","url","seleccionarDesafio","handleChange","persist","scope","map","defaultChecked","checked","icon","faEdit","isOpen","fullscreen","style","display","float","padding","rows","App","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43be9559.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoApp.b2c92f7c.png\";","import axios from 'axios';\r\n\r\nconst baseURL = 'https://ecochallenge-apis.herokuapp.com';\r\n\r\nconst topTechApi = axios.create({baseURL});\r\n\r\nexport default topTechApi;","import React from 'react';\r\n//css\r\nimport '../assetss/css/Login.css'\r\n//imagenes\r\nimport logoApp from '../assetss/img/logoApp.png'\r\n//servicio\r\nimport topTechApi from '../services/topTechApi';\r\n//librerias\r\n//import axios from 'axios';\r\n\r\nclass Login extends React.Component{\r\n\r\n    /* Creamos un constructor para pasarle las propiedades props que vamos a usar \r\n    ** para que el navegador vaya al dashboard una vez que valida el token al\r\n    **ingresar correctamente las credenciales\r\n    */\r\n   constructor(props){\r\n       super(props); //este codigo es para que podamos usar props en toda la clase\r\n   }\r\n   \r\n\r\n    //Vinculamos los imput con el js que tiene la ruta a las api\r\n    //Primero creamos un arreglo por el cual obtenemos los valores y los almacenamos ah√≠\r\n    state={\r\n        form:{\r\n            \"userName\": \"\",\r\n            \"password\": \"\",            \r\n        },\r\n        error:false, //variable para traer un mensaje cuando exista error\r\n        errorMsg: \"\" //mensaje que se va a mostrar en el error\r\n    }\r\n\r\n    //maneja el evento de recargar la pagina cuando hacemos Ingresar\r\n    manejadorSubmit=e=>{\r\n        e.preventDefault()\r\n    }\r\n\r\n    //Metodo manejador\r\n    //async hace que no tengamos que esperar a que la pagina se recargue para obtener el valor\r\n    manejadorChange = async e=>{\r\n        await this.setState({ //asigna un valor a la variable del estado\r\n            form:{\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n    \r\n    //manejador paa boton\r\n    manejadorBtn=()=>{\r\n        let url = \"user/authenticate\";\r\n        topTechApi.post(url,this.state.form)\r\n        .then( response=> {\r\n            saveTokenInLocalStorage(response.data.token);\r\n            //localStorage.setItem('token', response.data.token);\r\n            console.log('token', response.data.token);\r\n            this.props.history.push('/home');\r\n            /*preguntamos por el estado de la respuesta\r\n             * La respuesta puede ser estatus ok o estatus error\r\n             * Si es estatus ok, vamos a redirigir y almacenar el token en el local storage\r\n             * y si no, vamos a mostrar el error\r\n             */\r\n            /*if(response.data.status === \"ok\"){\r\n                //si todo va bien almacenamos el token\r\n                localStorage.setItem(\"token\", response.data.result.token);\r\n                //una vez que valida el token redireccionamos al dashboard con las props\r\n                console.log(this.props.history);\r\n                this.props.history.push(\"/home\");*/\r\n            /*}else{\r\n                //asignamos un estado a las variables error y errorMsg\r\n                this.setState({\r\n                    error : true,\r\n                    errorMsg : response.data.result.error_msg //ac√° va el nombre de la variable de la api que devuelve el error\r\n                })\r\n            }*/\r\n        /*el metodo catch se utiliza para controlar los errores que no estan incluidos en la api\r\n         * como por ejemplo que la api este caida o que no tengas internet\r\n         */                \r\n        }).catch( error => {\r\n            console.log(error);\r\n            this.setState({\r\n                error : true,\r\n                errorMsg : \"Error: Password o usuario incorrectos\"\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment> \r\n                <div className=\"wrapper fadeInDown\">\r\n                    <div id=\"formContent\">\r\n                        <div className=\"fadeIn first\">\r\n                        <br/><br/>\r\n                        </div>\r\n\r\n                        <div className=\"fadeIn first\">\r\n                        <img src={logoApp} width=\"150px\" alt=\"User Icon\" /><br/><br/>\r\n                        </div>\r\n\r\n                        <form onSubmit={this.manejadorSubmit}>\r\n                            <input type=\"text\" className=\"fadeIn second\" name=\"userName\" placeholder=\"userName\" onChange={this.manejadorChange}/>\r\n                            <input type=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Contrase√±a\" onChange={this.manejadorChange}/><br/><br/>\r\n                            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={this.manejadorBtn}>Ingresar</button><br/><br/>\r\n                        </form>\r\n\r\n                    {this.state.error === true &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {this.state.errorMsg}\r\n                        </div>\r\n                    } \r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\nexport function saveTokenInLocalStorage(tokenDetails){\r\n    localStorage.setItem('token', JSON.stringify(tokenDetails));\r\n}\r\n\r\nexport default Login","export default __webpack_public_path__ + \"static/media/logoB2.e885327f.png\";","import React from 'react'\r\n//imagenes\r\nimport logoApp from '../assetss/img/logoB2.png'\r\n\r\n\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\">\r\n                        <img src={logoApp} width=\"80\" height=\"50\" className=\"d-inline-block align-top\" alt=\"\"/>\r\n                        \r\n                    </a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\" onSubmit={this.manejadorSubmit}>\r\n                            <a className=\"nav-link\" href=\"/home\">\r\n                                Home<span className=\"sr-only\"></span></a>\r\n                        </li>\r\n                        <li className=\"nav-item active\" onSubmit={this.manejadorSubmit}>\r\n                            <a className=\"nav-link\" href=\"/desafios\">\r\n                                Desaf√≠os<span className=\"sr-only\"></span></a>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"/prueba\"><span className=\"sr-only\"></span></a>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                </div> \r\n            </nav>\r\n        );\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { render } from 'react-dom'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport Header from '../template/Header';\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          // To avoid unnecessary update keep all options in the state.\r\n          chartOptions: {\r\n            xAxis: {\r\n              categories: ['A', 'B', 'C'],\r\n            },\r\n            series: [\r\n              { data: [1, 2, 3] }\r\n            ],\r\n            plotOptions: {\r\n              series: {\r\n                point: {\r\n                  events: {\r\n                    mouseOver: this.setHoverData.bind(this)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          hoverData: null\r\n        };\r\n      }\r\n    \r\n      setHoverData = (e) => {\r\n        // The chart is not updated because `chartOptions` has not changed.\r\n        this.setState({ hoverData: e.target.category })\r\n      }\r\n    \r\n      updateSeries = () => {\r\n        // The chart is updated only with new options.\r\n        this.setState({\r\n          chartOptions: {\r\n            series: [\r\n              { data: [Math.random() * 5, 2, 1]}\r\n            ]\r\n          }\r\n        });\r\n      }\r\n    \r\n\r\n    render(){\r\n        const { chartOptions, hoverData } = this.state;\r\n        return(\r\n\r\n            <React.Fragment>\r\n                <Header></Header>\r\n                <div>\r\n                    <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={chartOptions}\r\n                    />\r\n                    <h3>Hovering over {hoverData}</h3>\r\n                    <button onClick={this.updateSeries.bind(this)}>Update Series</button>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\n//imagenes\r\nimport Header from '../template/Header';\r\n//css\r\nimport '../assetss/css/App.css'\r\n//servicio\r\nimport topTechApi from '../services/topTechApi';\r\n\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\n//const url = 'http://localhost:9000/desafios/';\r\n\r\nclass Desafios extends React.Component{\r\n\r\n    //en el estado almacenaremos toda los datos de los desafios\r\n    state = {\r\n        desafios: [],\r\n        modalInsertar: false, //estado para abrir y cerrar el modal \r\n        form: {\r\n            nombre_desafio: '',\r\n            estado_desafio: '',\r\n            puntaje_desafio: '',\r\n            paso1Desafio: '',\r\n            paso2Desafio: '',\r\n            paso3Desafio: '',\r\n            paso4Desafio: '',\r\n            id: '',\r\n            tipoModal: ''\r\n        }\r\n    }\r\n\r\n    //metodo para hacer la peticion get\r\n    // Para obtener todos los desafios\r\n    peticionGet = () => {\r\n        let url = \"desafios/\";\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n        topTechApi.get(url, { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        ).then(response => {\r\n            console.log('token', response.data.token);\r\n            this.setState({ desafios: response.data });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    //es asincrono porque se esta ejecutando en segundo plano\r\n    //Para agregar desafio\r\n    peticionPost = async () => {\r\n        let url = \"desafios/\";\r\n        delete this.state.form.id;\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n        await topTechApi.post(url, this.state.form,\r\n            {\r\n                headers:\r\n                    { \"Authorization\": `Bearer ${token}` },\r\n            })\r\n            .then(response => {\r\n                localStorage.getItem('token', JSON.stringify(response.data.token));\r\n                this.modalInsertar();// al momento que el usuario inserte cerramos el modal\r\n                this.peticionGet(); //y actualizamos los datos en la tabla\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    //modificar todos los campos del desaf√≠o\r\n    peticionPut=()=>{\r\n        let url = \"desafios/\";\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n        topTechApi.put(url+this.state.form.desafio_id, this.state.form,\r\n            { headers: \r\n                {\"Authorization\" : `Bearer ${token}`}, \r\n            })\r\n        .then(response=>{\r\n            localStorage.getItem('token', JSON.stringify(response.data.token)); \r\n            this.modalInsertar();\r\n            this.peticionGet();\r\n        })\r\n      }\r\n\r\n    //Modificar solo el estado en el checkbox del desaf√≠o\r\n    peticionPutEstado =(id, desafio) =>{\r\n        let url = \"desafios/\";\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n        topTechApi.put(url+ \"status/\"+ id, desafio,\r\n            { headers: \r\n                {\"Authorization\" : `Bearer ${token}`}, \r\n            })\r\n        .then(response=>{\r\n            localStorage.getItem('token', JSON.stringify(response.data.token)); \r\n            this.peticionGet();\r\n        })\r\n    }\r\n\r\n\r\n    //metodo para cambiar el estado de true a false\r\n    modalInsertar = () => {\r\n        this.setState({ modalInsertar: !this.state.modalInsertar });\r\n    }\r\n\r\n    seleccionarDesafio = (desafio) => {\r\n        this.setState({\r\n            tipoModal: 'actualizar',\r\n            form: {\r\n                nombre_desafio: desafio.nombre_desafio,\r\n                estado_desafio: desafio.estado_desafio,\r\n                puntaje_desafio: desafio.puntaje_desafio,\r\n                paso1Desafio: desafio.paso1Desafio,\r\n                paso2Desafio: desafio.paso2Desafio,\r\n                paso3Desafio: desafio.paso3Desafio,\r\n                paso4Desafio: desafio.paso4Desafio,\r\n                desafio_id: desafio.id\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    //capturamos lo que el usuario escribe en los imputs\r\n    //para esto necesitamos los atributos adentro de el form en el estado\r\n    //es asincrono porque se esta ejecutando en segundo plano\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({ //cambiamos el estado cuando el usuario este escribiendo en el imput\r\n            form: {\r\n                ...this.state.form, //es para heredar todos los atributos que ya existan en el form y no se borren al momento queel usuario escriba\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form); //mostramos en consola todo lo que va capturando\r\n    }\r\n\r\n    //esta sera la primera peticion que se ejecute al iniciar la pagina\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n\r\n    render() {\r\n        const form = this.state.form; //esto se usa para no tener que poner this.state dentro del return\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"App\">\r\n                    <br /><br />\r\n                    <button className=\"btn btn-success\" onClick={() => { this.setState({ form: null, tipoModal: 'insertar' }); this.modalInsertar() }}>Agregar Desafio</button>\r\n                    <br /><br />\r\n                    <div className=\"container table-responsive\">\r\n                        <table className=\"table table-hover table-light align-middle\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">NOMBRE</th>\r\n                                    <th scope=\"col\">ESTADO</th>\r\n                                    <th scope=\"col\">PUNTAJE</th>\r\n                                    <th scope=\"col\">PASO 1</th>\r\n                                    <th scope=\"col\">PASO 2</th>\r\n                                    <th scope=\"col\">PASO 3</th>\r\n                                    <th scope=\"col\">PASO 4</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.desafios.map(desafio => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>{desafio.id}</td>\r\n                                            <td>{desafio.nombre_desafio}</td>\r\n                                            {/* {/*<td>{desafio.estado_desafio ? \"Activo\" : \"Inactivo\"}</td> */}\r\n                                            <td><input type=\"checkbox\" defaultChecked={desafio.estado_desafio}\r\n                                                onChange={e => {\r\n                                                    // this.seleccionarDesafio({ estado_desafio: e.target.checked})\r\n                                                    this.peticionPutEstado(desafio.id, {estado_desafio: e.target.checked})\r\n                                                }} /> </td>\r\n                                            <td>{desafio.puntaje_desafio}</td>\r\n                                            <td>{desafio.paso1Desafio}</td>\r\n                                            <td>{desafio.paso2Desafio}</td>\r\n                                            <td>{desafio.paso3Desafio}</td>\r\n                                            <td>{desafio.paso4Desafio}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-primary\" onClick={() => { this.seleccionarDesafio(desafio); this.modalInsertar() }}><FontAwesomeIcon icon={faEdit} /></button>\r\n                                                {\"   \"}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <Modal isOpen={this.state.modalInsertar} fullscreen=\"lg\">\r\n                            <ModalHeader style={{ display: 'block' }}>\r\n                                <span onClick={() => this.modalInsertar()} style={{ float: 'right' }}>x</span>\r\n                            </ModalHeader>\r\n                            <ModalBody style={{ width: 560, padding: 30 }}>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"col-md-12 control-label\"> Nombre</label>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <input className=\"form-control\" name=\"nombre_desafio\"\r\n                                                    placeholder=\"nombre\" type=\"text\"\r\n                                                    value={form ? form.nombre_desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"col-md-2 control-label\"> Estado</label>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <input className=\"form-control\" name=\"estado_desafio\"\r\n                                                    placeholder=\"estado\" type=\"text\"\r\n                                                    value={form ? form.estado_desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"col-md-2 control-label\"> Puntaje</label>\r\n                                            <div className=\"col-lg-10\">\r\n                                                <input className=\"form-control\" name=\"puntaje_desafio\"\r\n                                                    placeholder=\"puntaje\" type=\"text\"\r\n                                                    value={form ? form.puntaje_desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"col-xs-2 control-label\"> Paso 1</label>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <input className=\"form-control\" name=\"paso1Desafio\"\r\n                                                    placeholder=\"paso 1\" type=\"text\"\r\n                                                    value={form ? form.paso1Desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"col-xs-2 control-label\"> Paso 2</label>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <input className=\"form-control\" name=\"paso2Desafio\"\r\n                                                    placeholder=\"paso 2\" type=\"text\"\r\n                                                    value={form ? form.paso2Desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"col-xs-2 control-label\"> Paso 3</label>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <input className=\"form-control\" name=\"paso3Desafio\"\r\n                                                    placeholder=\"paso 3\" type=\"text\"\r\n                                                    value={form ? form.paso3Desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"col-xs-2 control-label\"> Paso 4</label>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <input className=\"form-control\" rows=\"2\" name=\"paso4Desafio\"\r\n                                                    placeholder=\"paso 4\" type=\"text\"\r\n                                                    value={form ? form.paso4Desafio : ''}\r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ModalBody>\r\n\r\n                            <ModalFooter>\r\n                                {this.state.tipoModal == 'insertar' ? //con esto le decimos a los botones que si el modal lo vamos a usar para insertar tiene que llamar a la peticion post, pero si es para actualizar tiene que llamar a la peticion put\r\n                                    <button className=\"btn btn-success\" onClick={() => this.peticionPost()}>\r\n                                        Insertar\r\n                                    </button> : <button className=\"btn btn-success\" onClick={() => this.peticionPut()}>\r\n                                        Actualizar\r\n                                    </button>\r\n                                }\r\n                                <button className=\"btn btn-danger\" onClick={() => this.modalInsertar()}>Cancelar</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Desafios;","import React from 'react';\r\n//import './assetss/css/App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport Desafios from './components/Desafios';\r\n\r\nfunction App() {\r\n  return (\r\n      <React.Fragment>\r\n            <Router>\r\n              <Switch>\r\n                <Route path=\"/\" exact render = { props=> ( <Login {...props}/>)}></Route>\r\n                <Route path=\"/home\" exact render = { props=> ( <Home {...props}/>)}></Route>     \r\n                <Route path=\"/desafios\" exact render = { props=> ( <Desafios {...props}/>)}></Route>\r\n              </Switch>\r\n            </Router>\r\n      </React.Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assetss/css/index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}